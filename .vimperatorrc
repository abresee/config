" vim: ft=vimperator sw=2 sts=2 fdm=marker

" let                                                                        {{{

let mapleader = ","
nmap s <Leader>

" center line
let g:asdfghjkl_default = "true"
let g:asdfghjkl_mode_change_key = "<Space>"

" appendAnchor
let g:auto_append_anchor = 0
let g:auto_append_anchor_once = 1

" hints_yank_paste.js
let g:hints_copy_maps = "k K <nop> <nop>"

" twittperator.js
let g:twittperator_use_chirp = 1
let g:twittperator_screen_name = "camelgoat"
let g:twittperator_history_limit = 5000
let g:twittperator_use_ssl_connection_for_api_ep = 1
let g:twittperator_lang = "ja"
let g:twittperator_count = 50

let g:twittperator_plugin_sstp = 0
let g:twittperator_plugin_setuden = 0
let g:twittperator_plugin_urusai_namakubi = 0
let g:twittperator_plugin_echo_tweet = 0
let g:twittperator_plugin_reply_popup_alert = 0
let g:twittperator_plugin_twlist_win = 0
let g:twittperator_plugin_pong = 1
let g:twittperator_plugin_colorful_log_writer = 1
let g:twittperator_plugin_add_url_completer = 1
let g:twittperator_plugin_anti_goji = 1
let g:twittperator_plugin_twsidebar = 1
let g:twittperator_plugin_eject_alert = 1
let g:twittperator_plugin_eject_alert_device = '/dev/sr1'
let g:twittperator_plugin_ril = 1
let g:twittperator_plugin_mstrans = 1
let g:twittperator_plugin_copy = 1
let g:twittperator_plugin_twsidebar_expand_url = 1

" prefix of commanded bookmarkelts
let g:command_bookmarklet_prefix = ""
let g:command_bookmarklet_use_sandbox = 0

" sbm_comments_viewer
let g:sbm_comments_viewer_filter_nocomments = 1

" epub-reader.js
let g:epub_reader_map_prev = 'h <'
let g:epub_reader_map_next = 'l >'


" }}}

" set {{{

set scrollbars
set notabnumbers
set status=tabcount,bookmark,position,input,location
set history=5000
set newtab=all

" }}}

" Pref (firefox)                                                                {{{

" アドオン/プラグイン開発用
set! javascript.options.strict=true
set! javascript.options.showInConsole=true
set! browser.dom.window.dump.enabled=true

" ページのアクセスキーを無効化
set! ui.key.generalAccessKey=0
set! ui.key.contentAccessKey=0

" Awesomebarの補完対象にBookmarkletを追加、件数を50件に変更
" set! browser.urlbar.filter.javascript=false
" set! browser.urlbar.maxRichResults=50

" liberator.log
set! extensions.liberator.loglevel=666

" ポップアップを 10000 まで許可する
" set! dom.popup_maximum=10000

" textarea, input 両方で spell check を有効にする
set! layout.spellcheckDefault=2
set! spellchecker.dictionary=en-US

" 単語選択時の右側のスペース選択を行わない
set! layout.word_select.eat_space_to_next_word=false

" タブバーを自動で隠さない
set! browser.tabs.autoHide=false

" 閉じるボタンを表示
set! browser.tabs.closeButtons=3

" IPv6 無効化
" set! network.dns.disableIPv6=true

" undo limit
set! browser.sessionstore.max_tabs_undo=100

" 新しいタブをフォアグラウンドで開く
set! browser.tabs.loadInBackground=false

" セッションの保存間隔
" set! browser.sessionstore.interval=120000

" JIT
" set! javascript.options.jit.chrome=true
" set! javascript.options.jit.content=true

" 拡張機能のバージョンチェックを回避
set! extensions.checkCompatibility.4.0=false
set! extensions.checkCompatibility.4.0b=false
set! extensions.checkCompatibility.4.1b=false
set! extensions.checkCompatibility.4.2a=false
set! extensions.checkCompatibility.4.2b=false
set! extensions.checkCompatibility.5.0=false
set! extensions.checkCompatibility.5.1=false
set! extensions.checkCompatibility.6.0=false
set! extensions.checkCompatibility.6.1=false
set! extensions.checkCompatibility.7.0=false
set! extensions.checkCompatibility.7.1=false
set! extensions.checkCompatibility.8.0=false
set! extensions.checkCompatibility.8.1=false
set! extensions.checkCompatibility.9.0a=false
set! extensions.checkCompatibility.9.1=false

" キャッシュサイズ
set! browser.cache.memory.capacity=32768

" ホームページ
set! browser.startup.homepage="about:blank"

" セッションマネージャ
set! extensions.sessionmanager.startup=2
set! extensions.sessionmanager.resume_session="backup.session"

" 以前の値、有効にすると、jquery.com に接続できなくなる。
" set! intl.accept_languages="en-US,en,ja-JP,ja,chrome://global/locale/intl.properties"

" 0 にすると、バックグラウンドでタブを読み込まない (デフォルトは -1)
" set! browser.sessionstore.max_concurrent_tabs=3

" 最後のタブを閉じたときに Firefox を終了しない
set! browser.tabs.closeWindowWithLastTab=false

" 起動時に前回のセッションを復元
set! browser.startup.page=3

" XXX HTTP/1.1 パイプリング
set! network.http.pipelining=true

" XXX GIF アニメ (once / normal / none)
set! image.animation_mode="normal"

" URL デコードしないようにする
nnoremap <silent> y :<C-u>js util.copyToClipboard(buffer.URL)<CR>

" direct_bookmark
nnoremap a :sbm<Space>

" }}}

" Mappings (Site Local)                                                           {{{

"nnoremap -urls='^http://www\.tumblr\.com/(dashboard|tumblelog|show)' <Silent> f :xh t //*[@class="quote_source"]//a[not(@class="tumblr_blog")]|//*[@class="caption"]//a[not(@class="tumblr_blog")]<CR>

" 画像のばやい - 拡縮
nnoremap -urls '\.(jpg|png|gif)$' zi zI
nnoremap -urls '\.(jpg|png|gif)$' zo zO

" win-mouse
nnoremap -urls=www\\.slideshare\\.net l :slideshare next<CR>
nnoremap -urls=www\\.slideshare\\.net h :slideshare prev<CR>

" Google+
nnoremap -urls '^https://plus\.google\.com/\d+/[a-z]+$' gu 2gu

" refe
nnoremap -urls '^http://doc\.okkez\.net/' o :refe<Space>
nnoremap -urls '^http://doc\.okkez\.net/' t :trefe<Space>

" Google Search
" nnoremap -urls '^https://www\.google\.co\.jp/search\?' f :gr<Space>

" PDF.js.js
nnoremap -urls \.pdf$ i :<C-u>pdfjs index<Space>

" }}}

" Mappings (Leader)                                                          {{{

" twittperator.js
nnoremap <Leader>ww :<C-u>tw<Space>
nnoremap <Leader>wr :<C-u>tw<Space>@
nnoremap <Leader>wR :<C-u>tw<Space>RT<Space>@
nnoremap <Leader>W  :<C-u>tw!<Space>
nnoremap <Leader>w@ :<C-u>tw!@
nnoremap <Leader>wa :<C-u>tw!@
nnoremap <Leader>wA :<C-u>tw!sbm<Space>
nnoremap <Leader>wf :<C-u>tw!+
nnoremap <Leader>w? :<C-u>tw!?
nnoremap <Leader>w/ :<C-u>tw!/
nnoremap <Leader>wc :<C-u>tw!copy<Space>
nnoremap <Leader>wi :<C-u>tw!info<Space>
nnoremap <Leader>wt :<C-u>tw!track<Space>
nnoremap <Leader>wT :<C-u>tw!thread<Space>
nnoremap <Leader>wd :<C-u>tw!delete<Space>
nnoremap <Leader>wh :<C-u>tw!home<Space>
nnoremap <Leader>ws :<C-u>tw!status<Space>
nnoremap <Leader>wl :<C-u>tw!ril<Space>

nnoremap <Leader>w1 :<C-u>tws<Space>tab<Space>0<CR>
nnoremap <Leader>w2 :<C-u>tws<Space>tab<Space>1<CR>
nnoremap <Leader>w3 :<C-u>tws<Space>tab<Space>2<CR>
nnoremap <Leader>w4 :<C-u>tws<Space>tab<Space>3<CR>
nnoremap <Leader>w5 :<C-u>tws<Space>tab<Space>4<CR>

" 各コマンド呼び出し
nnoremap <Leader>h :<C-u>hsearch<Space>
nnoremap <Leader>H :<C-u>hcopy<Space>
nnoremap <Leader>s :<C-u>viewSBMComments -type htdl -format=id,comment<CR>
nnoremap <Leader>g :<C-u>gmail<Space>
nnoremap <Leader>G :<C-u>mstrans<Space>
nnoremap <Leader>A :<C-u>applaunch<Space>
nnoremap <Leader>p :<C-u>pino<Space>

" AutoBookmark
nnoremap <Leader>aa :<C-u>autobookmark<Space>
nnoremap <Leader>ac :<C-u>autobookmark continue<Space>
nnoremap <Leader>as :<C-u>autobookmark start<Space>
nnoremap <Leader>ar :<C-u>autobookmark remove<Space>

" vim の設定ぽく
nnoremap <Leader>b :<C-u>buffer<Space>

" }}}

" Mappings                                                                   {{{

" インサートモード時の前後移動
inoremap <C-b> <Left>
inoremap <C-f> <Right>

" コマンドモードでの履歴たぐり
cnoremap <C-p> <S-Tab>
cnoremap <C-n> <Tab>
cnoremap <C-b> <Left>
cnoremap <C-f> <Right>
cnoremap <C-k> <Up>
cnoremap <C-l> <Down>

" echo and echopy
noremap e :<C-u>echo<Space>
noremap E :<C-u>echo!<Space>

" multi requster
nnoremap w :<C-u>mr<Space>
nnoremap W :<C-u>mr!<Space>

" <C-k> で検索ページにいくのがウザイので無効化
" nnoremap <C-k> <Nop>

" INSERT モードでよくまつがえて押すので…
inoremap <C-r> <C-i>

" Undo
nnoremap U :<C-u>undo<Space>

" コピーする
vnoremap y :<C-u>copy %SEL%<CR>

" タブの移動
nnoremap <A-C-j> :<C-u>tabmove! +1<CR>
nnoremap <A-C-k> :<C-u>tabmove! -1<CR>

" <C-i> の挙動が残念なのを修正
cnoremap <C-i> <Tab>
cnoremap <S-C-i> <S-Tab>

" ダウンロードマネージャ抑止
cnoremap <C-j> <CR>
inoremap <C-j> <CR>
nnoremap <C-j> <CR>

" zoom em all
nnoremap ZI :<C-u>zoomall<Space>+10<CR>
nnoremap ZO :<C-u>zoomall<Space>-10<CR>
nnoremap ZZ :<C-u>zoomall<CR>

" 直前のタブを削除
nnoremap <Leader>dd :<C-u>js<Space>tabs.remove(tabs.alternate)<CR>

" マウスカーソルを邪魔じゃないとこに飛ばす
nnoremap <A-z> :mouse move 1800 10000<CR>

" tab-history.js
nnoremap < :tabhistory back<CR>
nnoremap > :tabhistory forward<CR>

" }}}

" Command                                                                     {{{
command! backgroundimage :js let (doc = content.document) let (m = doc.defaultView.getComputedStyle(doc.body, '').backgroundImage.match(/url\s*\(\s*['"](.+)['"]\s*\)/)) m ? liberator.open(m[1], liberator.NEW_TAB) : liberator.echoerr('background image not found')
command! cal :js liberator.echo(<datepicker type="grid" xmlns={XUL}/>)
command! calcpluginauthor echo let c={}; $('//tr/td[3]').evaluate().map($f.textContent()).forEach(function(n){ c[n] ? c[n]+=1 : c[n] = 1 }); c
command! dta js DTA_ContextOverlay.findLinks(false);
command! evernote js evernote_doAction( document.popupNode, 'CLIP_ACTION_SELECTION' );
command! execlip js util.readFromClipboard().split(/\n/).filter(function(v) v.trim().length).forEach(liberator.execute)
command! -nargs=+ sitesearch :exe ":tabopen <args> site:" + content.document.domain
command! -nargs=1 feed subscrldr -rate=<args>
command! ramen -nargs=1 delay -interval=<args>m namakubi できたぞ、くえよ、しぬぞ
" 選択範囲内のリンクを開く
command! sopen js [liberator.open(a.href, liberator.NEW_BACKGROUND_TAB) for (a in util.evaluateXPath("//a")) if (content.window.getSelection().containsNode(a, true))]
command! sum echo let (sum=0) (util.readFromClipboard().match(/\d+/g).map(function(s) parseInt(s)).forEach(function(v) sum+=v),sum)
" command! googlesidewiki js document.getElementById('gtbSidewiki').click()
command! webcon :emenu Tools.Web Console

autocmd LocationChange .* js modes.passAllKeys = /twitter\.com/.test(buffer.URL)
" }}}

" Abbr                                                                        {{{

abbr jager          JagerMonkey
abbr #v             #vimperator
abbr pen            pentadactyl
abbr #pen           #pentadactyl
cabbr .fm           http://turntable.fm/metallum #turntablefm

cabbr cr            ~/../../project/coderepos/vimp-plugin/
cabbr vr            ~/vimperator/default/

abbr -j .title      '"' + buffer.title.replace(/ - Death to.*グループ$/, '') + '"'
abbr -j .url        plugins.bitly.jmp(buffer.URL)
abbr -j .tu         abbreviations.get(modes.INSERT, '.title').text + ' - ' + plugins.bitly.jmp(buffer.URL)
abbr -j .impala     plugins.haneru.getc(buffer.URL)[0]

abbr -j .song       let (song = plugins.mpdCurrentsong.API.getSongInfo()) <>{song.Title} / {song.Artist} #NowPlaying</>

iabbr -j .cmdline   commandline.command

cabbr -j .reply        let (d=doc.querySelector('[data-item-id][data-tweet-id]')) <>@{d.getAttribute('data-screen-name')}#{d.getAttribute('data-item-id')}</>
cabbr -j .rt        let (d=doc.querySelector('[data-item-id][data-tweet-id]')) <>RT @{d.getAttribute('data-screen-name')}#{d.getAttribute('data-item-id')}</>


cabbr -j .amazon    let(asin=content.document.getElementById('ASIN').value,base='http://amazon.jp/',res)['dp/','o/ASIN/','gp/product/'].some(function(it)((content.document.location.pathname.indexOf(it)>1)&&(res=base+it+asin)))&&res;

cabbr -j .date      (new Date).toLocaleFormat("%Y-%m-%d")
cabbr -j .time      (new Date).toLocaleFormat("%H:%M:%S")

" }}}

" Style {{{

style -name commandline-ime chrome://* #liberator-commandline-command input { ime-mode: inactive; }

" }}}

